steps:


#Analise no SonarCloud Scan
- name: 'ubuntu'
  entrypoint: bash
  args: 
  - '-c'
  - apt-get update
  - apt-get -y install node
  - mvn verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io','-Dsonar.organization=BrunoSantos','-Dsonar.projectKey=-Tech-Day---Cloud-DevOps-Experience','-Dsonar.login=${_SONAR_TOKEN}'
  id: SonarCloud

  #Analise Snyk (SCA security scan)
- name: 'ubuntu'
  entrypoint: bash
  args: 
      - '-c'
      - |-
       apt-get update
       apt-get -y install maven 
       SNYK_TOKEN=${_SNYK_TOKEN}
       export SNYK_TOKEN
       mvn snyk:test -fn 
        
  id: Snyk SCA

# Build --- TAG ----- PUSH Docker Repositorio.

# Frontend
- id: 'Docker image Frontend'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    docker build -t frontend:latest Docker-Projetos/frontend/.
    docker tag frontend:latest gcr.io/bootcamp-363315/frontend:latest
    docker push gcr.io/bootcamp-363315/frontend:latest

#database
- id: 'Docker Image Database'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    docker build -t database:latest Docker-Projetos/database/.
    docker tag database:latest us-central1-docker.pkg.dev/bootcamp-363315/database/database:latest
    docker push us-central1-docker.pkg.dev/bootcamp-363315/database/database:latest

#backend
- id: 'Docker image Backend'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    docker build -t backend:latest Docker-Projetos/backend/.
    docker tag backend:latest us-central1-docker.pkg.dev/bootcamp-363315/backend/backend:latest
    docker push us-central1-docker.pkg.dev/bootcamp-363315/backend/backend:latest

## Rede Nat Ip e router 
- id: 'infraestrutura rede nat ip'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
   cd Rede-NaTgatway
   terraform init
   terraform apply -auto-approve

  # Firewall 
- id: 'infraestrura security-firewall'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
   cd Build-Terraform-Firewall
   terraform init
   terraform apply -auto-approve


### cluster GKE
- id: 'cluster-GKE'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    cd GKE-Prod
    terraform init
    terraform apply -auto-approve


# Run DAST scan using OWASP ZAP in GCP DevSecOps Pipeline
- name: 'ubuntu'
  entrypoint: bash
  args: 
    - '-c'
    - |-
      apt-get update
      apt-get -y install wget
      apt-get -y install default-jdk
      wget https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2.11.1_Linux.tar.gz
      mkdir zap
      tar -xvf ZAP_2.11.1_Linux.tar.gz
      cd ZAP_2.11.1
      ./zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout ../zap_report.html 
  id: DAST Scan using OWASP ZAP
artifacts:
  objects:
    location: 'gs://securityguro'
    paths:
      - zap_report.html





